{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"python validating types (vtypes) \u00b6 Validating types for python - use isinstance() to validate both type and value. vtypes is a small library to define \"validating types\". These types can be used anywhere where you usually check type with isinstance() , so add value validation. This can be used to make validation schemas more readable (for example in pyfields ). Installing \u00b6 > pip install vtypes Usage \u00b6 TODO Main features \u00b6 TODO See Also \u00b6 checktypes , that was a great source of inspiration. The only reason for recreating something new was the capability to use the valid8 syntax for validators (as well as its standardized exceptions). Do you like this library ? You might also like my other python libraries Want to contribute ? \u00b6 Details on the github page: https://github.com/smarie/python-vtypes","title":"Home"},{"location":"#python-validating-types-vtypes","text":"Validating types for python - use isinstance() to validate both type and value. vtypes is a small library to define \"validating types\". These types can be used anywhere where you usually check type with isinstance() , so add value validation. This can be used to make validation schemas more readable (for example in pyfields ).","title":"python validating types (vtypes)"},{"location":"#installing","text":"> pip install vtypes","title":"Installing"},{"location":"#usage","text":"TODO","title":"Usage"},{"location":"#main-features","text":"TODO","title":"Main features"},{"location":"#see-also","text":"checktypes , that was a great source of inspiration. The only reason for recreating something new was the capability to use the valid8 syntax for validators (as well as its standardized exceptions). Do you like this library ? You might also like my other python libraries","title":"See Also"},{"location":"#want-to-contribute","text":"Details on the github page: https://github.com/smarie/python-vtypes","title":"Want to contribute ?"},{"location":"api_reference/","text":"API reference \u00b6 In general, help(symbol) will provide the latest up-to-date documentation. TODO \u00b6","title":"API reference"},{"location":"api_reference/#api-reference","text":"In general, help(symbol) will provide the latest up-to-date documentation.","title":"API reference"},{"location":"api_reference/#todo","text":"","title":"TODO"},{"location":"changelog/","text":"Changelog \u00b6 0.1.0 - TODO \u00b6 TODO","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#010-todo","text":"TODO","title":"0.1.0 - TODO"},{"location":"long_description/","text":"python validating types (vtypes) \u00b6 Validating types for python - use isinstance() to validate both type and value. The documentation for users is available here: https://smarie.github.io/python-vtypes/ A readme for developers is available here: https://github.com/smarie/python-vtypes","title":"python validating types (vtypes)"},{"location":"long_description/#python-validating-types-vtypes","text":"Validating types for python - use isinstance() to validate both type and value. The documentation for users is available here: https://smarie.github.io/python-vtypes/ A readme for developers is available here: https://github.com/smarie/python-vtypes","title":"python validating types (vtypes)"}]}